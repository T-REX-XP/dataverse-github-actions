name: Build Dataverse Package

on:
  release:
    types: [published]
env:
  GITHUB_TOKEN: ${{ secrets.TOKEN }}
  buildVersion: ${{ github.run_number }}
  buildType: Release
  version: 1.0.0
jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Power Platform Tools
        uses: microsoft/powerplatform-actions/actions-install@v1
      
      - name: Parse version from tag
        id: parse_version
        run: |
          $tag = "${{ github.ref_name }}"
          if ($tag -match "v(\d+)\.(\d+)\.(\d+)") {
            echo "##[set-output name=major;]$($matches[1])"
            echo "##[set-output name=minor;]$($matches[2])"
            echo "##[set-output name=patch;]$($matches[3])"
          }
        shell: pwsh

      - name: Update Solution Version
        run: |
          $version = "${{ steps.parse_version.outputs.major }}.${{ steps.parse_version.outputs.minor }}.${{ steps.parse_version.outputs.patch }}.${{ env.buildVersion }}"
          Write-Host "##[set-output name=version;]$version"
          Write-Host "Current version: $version"
          $xml = [xml](Get-Content package/other/Solution.xml)
          $xml.ImportExportXml.SolutionManifest.Version = $version
          $xml.Save("package/other/Solution.xml")
        shell: pwsh

      - name: Get Solution Unique Name
        id: solution-unique-name
        uses: mavrosxristoforos/get-xml-info@1.0
        with:
          xml-file: package/Other/Solution.xml
          xpath: "//ImportExportXml/SolutionManifest/UniqueName"

      - name: Get Solution Version
        id: solution-version
        uses: mavrosxristoforos/get-xml-info@1.0
        with:
          xml-file: package/Other/Solution.xml
          xpath: "//ImportExportXml/SolutionManifest/Version"

      - name: Pack Solution
        uses: microsoft/powerplatform-actions/pack-solution@v1
        with:
          solution-file: "./build/${{ steps.solution-unique-name.outputs.info }}_${{ steps.solution-version.outputs.info }}_managed.zip"
          solution-folder: "./package"
          solution-type: "Managed"

      - name: Upload built solution to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/${{ steps.solution-unique-name.outputs.info }}_${{ steps.solution-version.outputs.info }}_managed.zip
          asset_name: ${{ steps.solution-unique-name.outputs.info }}_${{ steps.solution-version.outputs.info }}_managed.zip
          asset_content_type: application/zip
